# Type Definitions

# The Post type represents a single post, including content, image, and the user who posted it.
type Post {
  id: ID!
  content: String!
  createdAt: DateTime # We can use more scaler. npm package 'graphql-scalars'
  updatedAt: DateTime # We can use more scaler. npm package 'graphql-scalars'
  image: Image # Reusing 'Image' type from userType file as we are merging all types.
  postedBy: User # Reusing 'User' type from userType file as we are merging all types.
}

# Query Definitions

# Root Query type to handle fetching data related to posts.
type Query {
  getAllPosts: [Post!]!
  getPostsByUser: [Post!]!
  singlePost(postId: String!): Post!
  postCount: Int!
}

# Input Type Definitions

# Input type for creating a post. It includes content and an image.
input PostCreateInput {
  content: String!
  image: ImageInput # Reusing 'ImageInput' type from userType file as we are merging all types.
}
input PostUpdateInput {
  _id: ID!
  content: String!
  image: ImageInput # Reusing 'ImageInput' type from userType file as we are merging all types.
}

# Mutation Definitions

type Mutation {
  # Create a new post with the given input, returning the created Post object
  postCreate(input: PostCreateInput!): Post!
  postUpdate(input: PostUpdateInput!): Post!
  postDelete(postId: String!): Post!
}
